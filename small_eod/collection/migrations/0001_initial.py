# Generated by Django 3.0.1 on 2020-01-02 02:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('case', '0005_delete_tag'),
        ('channel', '0002_auto_20200101_2338'),
        ('files', '0001_initial'),
        ('institution', '0002_auto_20200101_2338'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modifiedOn', models.DateTimeField(auto_now=True)),
                ('createdOn', models.DateTimeField(auto_now_add=True)),
                ('comment', models.CharField(max_length=256)),
                ('public', models.BooleanField(default=False)),
                ('expiredOn', models.DateTimeField()),
                ('query', models.CharField(max_length=256)),
                ('createdBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='collection_createdBy', to=settings.AUTH_USER_MODEL)),
                ('modifiedBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='collection_modifiedBy', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modifiedOn', models.DateTimeField(auto_now=True)),
                ('createdOn', models.DateTimeField(auto_now_add=True)),
                ('comment', models.CharField(max_length=256)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='case.Case')),
                ('createdBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='note_createdBy', to=settings.AUTH_USER_MODEL)),
                ('modifiedBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='note_modifiedBy', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Letter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modifiedOn', models.DateTimeField(auto_now=True)),
                ('createdOn', models.DateTimeField(auto_now_add=True)),
                ('direction', models.TextField(choices=[('IN', 'Received'), ('OUT', 'Sent')], default='IN', max_length=3)),
                ('name', models.CharField(max_length=256)),
                ('final', models.BooleanField()),
                ('date', models.DateTimeField()),
                ('identifier', models.CharField(max_length=256)),
                ('ordering', models.IntegerField(default=0)),
                ('comment', models.CharField(max_length=256)),
                ('excerpt', models.CharField(max_length=256)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='institution.AddressData')),
                ('attachment', models.ManyToManyField(to='files.File')),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='case.Case')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='channel.Channel')),
                ('createdBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='letter_createdBy', to=settings.AUTH_USER_MODEL)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='institution.Institution')),
                ('modifiedBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='letter_modifiedBy', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modifiedOn', models.DateTimeField(auto_now=True)),
                ('createdOn', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=256)),
                ('data', models.DateTimeField()),
                ('comment', models.CharField(max_length=256)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='case.Case')),
                ('createdBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='event_createdBy', to=settings.AUTH_USER_MODEL)),
                ('modifiedBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='event_modifiedBy', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CollectionCollectable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('content_id', models.PositiveIntegerField()),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='collection.Collection')),
                ('content_type', models.ForeignKey(limit_choices_to=models.Q(models.Q(('app_label', 'api'), ('model', 'Event')), models.Q(('app_label', 'api'), ('model', 'Note')), models.Q(('app_label', 'api'), ('model', 'Letter')), _connector='OR'), on_delete=django.db.models.deletion.DO_NOTHING, to='contenttypes.ContentType')),
            ],
        ),
    ]
